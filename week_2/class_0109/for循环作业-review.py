#-*-coding:utf-8-*-
# 1.利用while循环 完成1-100的整数数字相加和
#方法1：
# sum=0
# i=1
# while i<101:
#     sum+=i
#     i+=1
# print(sum)

#方法2：
# sum=0
# for i in range(1,101):
#     sum+=i
# print(sum)



# 2.利用for循环 完成1-10的整数数字相加和
#方法1：
# sum=0
# for i in range(1,11):
#     sum+=i
# print(sum)

#方法2：
# sum=0
# i=1
# while i<11:
#     sum+=i
#     i+=1
# print(sum)



# 3：利用for循环输出如下三角形
#
# *
#
# **
#
# ***
#
# ****
#
# *****
#方法1：
# s='*'
# for i in range(1,6):
#     print(i*s)

#方法2：
# s='*'
# i=1
# while i <6:
#     print(i*s)
#     i+=1



# 4：请用嵌套for循环输出如下等边三角形（三个边均为5个*）
#
#        *
#
#      *  *
#
#    *  *   *
#
#   *  *  *  *
#
# *  * *  *  *  *
#方法1：
# s='* '
# k=' '
# for i in range(1,6):
#     print((5-i)*k+i*s)

#方法2：
# s='* '
# k=' '
# i=1
# while i<6:
#     print((5-i)*k+i*s)
#     i+=1


# 5:输出99乘法表
#方法1：
# for j in range(1,10):
#     for i in range(1,j+1):
#         print('{}*{}={} '.format(i,j,i*j),end='') #end=""取消换行
#     print('') #增加换行


# 6:利用for循环，完成a=[1,7,4,89,34,2]的冒泡排序：
# 冒泡排序：小的排前面，大的排后面。
a=[1,7,4,89,34,2,0,-1]
#方法1：
for j in range(len(a)-1):
    for i in range(len(a)-1):
        if a[i]>a[i+1]:
            a[i],a[i+1]=a[i+1],a[i] #可以直接交换
            # s=a[i+1] #也可以使用中间值进行替换
            # a[i+1]=a[i]
            # a[i]=s
print(a)




#方法2：内置函数
#倒叙排列
# a.sort(reverse=True)
# print(a)
#升序排列
# a.sort()
# print(a)


# 7:有1 2 3 4 这四个数字，能组成多少个互不相同且无重复数字的三位数？分别是什么？



# 8:求 0—7 所能组成的奇数个数



# 9:购物车程序 需求：
# 1：启动程序后，让用户在控制台输入工资，然后打印商品信息（随便你们自己用什么方式存储商品，记得要有商品的编号、名称以及价格）
# 2：允许用户根据商品编号购买商品
# 3：用户选择商品后，监测余额是否足够，如果足够就直接扣款，不够就提醒用户，不能购买这个商品。
# 4：可随时退出，退出后，打印已购买商品和余额